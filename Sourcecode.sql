CREATE TABLE DRUGS(
    D_NAME VARCHAR(20) PRIMARY KEY,
    PRESCRIPTION VARCHAR(10),
    THERAPY_CATEGORY VARCHAR(30)
);

INSERT INTO DRUGS VALUES('Vitamin A','No','Nutritional Supplement');
INSERT INTO DRUGS VALUES('Vitamin D3','No','Nutritional Supplement');
INSERT INTO DRUGS VALUES('Paracetamol','No','Antipyretic');
INSERT INTO DRUGS VALUES('Omeprazole','Yes','Anti-Ulcer');
INSERT INTO DRUGS VALUES('Atorvastatin','Yes','Cardio-Vascular');
INSERT INTO DRUGS VALUES('Ibuprofen','Yes','Analgesic');

SELECT * FROM DRUGS

--------------------------------------------------------------------------------

CREATE TABLE MEDICINE(
    M_ID VARCHAR(10) PRIMARY KEY,
    D_NAME VARCHAR(20),
    GENERAL_NAME VARCHAR(20),
    BBF_MONTHS INT,
    TYPEE VARCHAR(20),
    WEIGHT_MG INT,
    STORAGE_CONDITION VARCHAR(20),
    FOREIGN KEY (D_NAME) REFERENCES DRUGS(D_NAME)
);

INSERT INTO MEDICINE VALUES('M101','Vitamin A','Vitarich',18,'Tablet',100,'Room Temperature');
INSERT INTO MEDICINE VALUES('M102','Vitamin D3','Finamin',24,'Capsule',50,'Room Temperature');
INSERT INTO MEDICINE VALUES('M103','Paracetamol','Norfloxacin',12,'Tablet',75,'Room Temperature');
INSERT INTO MEDICINE VALUES('M104','Omeprazole','Omsergy',18,'Syrup',100,'Cold');
INSERT INTO MEDICINE VALUES('M105','Atorvastatin','Amoxyn',36,'Capsule',50,'Cold');
INSERT INTO MEDICINE VALUES('M106','Ibuprofen','Ibuprofen',12,'Tablet',150,'Cold');

SELECT * FROM MEDICINE

--------------------------------------------------------------------------------

CREATE TABLE CS(
    CITY VARCHAR(20) PRIMARY KEY,
    STATE VARCHAR(20)
);

INSERT INTO CS VALUES('Bhopal','Madhya Pradesh');
INSERT INTO CS VALUES('Hyderabad','Telangana');
INSERT INTO CS VALUES('Bangalore','Karnataka');
INSERT INTO CS VALUES('Chandigarh','Haryana');
INSERT INTO CS VALUES('Srinagar','J&K');
INSERT INTO CS VALUES('Mumbai','Maharashtra');

SELECT * FROM CS

--------------------------------------------------------------------------------

CREATE TABLE COMPANY(
    CO_ID VARCHAR(10) PRIMARY KEY,
    PHONE INT,
    C_NAME VARCHAR(20),
    CITY VARCHAR(20),
    FOREIGN KEY(CITY) REFERENCES CS(CITY)
);

INSERT INTO COMPANY VALUES('CO101',8899775533,'Sun Pharma','Hyderabad');
INSERT INTO COMPANY VALUES('CO102',1234567890,'Med City','Mumbai');
INSERT INTO COMPANY VALUES('CO103',9876543210,'Cipla','Bangalore');
INSERT INTO COMPANY VALUES('CO104',5555444498,'Heal Kit','Bhopal');

SELECT * FROM COMPANY

--------------------------------------------------------------------------------

CREATE TABLE MED_COM(
    CO_ID VARCHAR(10),
    M_ID VARCHAR(10),
    PACK_SIZE INT,
    PRICE INT,
    PRIMARY KEY (CO_ID,M_ID),
    FOREIGN KEY (CO_ID) REFERENCES COMPANY(CO_ID),
    FOREIGN KEY (M_ID) REFERENCES MEDICINE(M_ID)
);

INSERT INTO MED_COM VALUES('CO101','M101',10,50);
INSERT INTO MED_COM VALUES('CO101','M102',20,100);
INSERT INTO MED_COM VALUES('CO101','M103',30,200);
INSERT INTO MED_COM VALUES('CO102','M104',15,500);
INSERT INTO MED_COM VALUES('CO102','M105',25,100);
INSERT INTO MED_COM VALUES('CO102','M106',20,50);
INSERT INTO MED_COM VALUES('CO103','M101',35,70);
INSERT INTO MED_COM VALUES('CO103','M102',5,100);
INSERT INTO MED_COM VALUES('CO103','M103',25,50);
INSERT INTO MED_COM VALUES('CO104','M101',30,100);
INSERT INTO MED_COM VALUES('CO104','M102',10,150);
INSERT INTO MED_COM VALUES('CO104','M103',5,10);

SELECT * FROM MED_COM

--------------------------------------------------------------------------------

CREATE TABLE EMPLOYEE(
    E_ID VARCHAR(10) PRIMARY KEY,
    E_NAME VARCHAR(20),
    PHONE INT,
    SALARY INT,
    DOJ DATE
);

INSERT INTO EMPLOYEE VALUES('E101','Dinesh',8890065467,40000,'12-NOV-2015');
INSERT INTO EMPLOYEE VALUES('E102','Ramesh',3456879032,30000,'25-JAN-2016');
INSERT INTO EMPLOYEE VALUES('E103','Suresh',7766908457,50000,'6-MAY-2014');
INSERT INTO EMPLOYEE VALUES('E104','Bikesh',9965285610,60000,'16-DEC-2013');
INSERT INTO EMPLOYEE VALUES('E105','Rakesh',9754091286,50000,'20-SEP-2014');

SELECT * FROM EMPLOYEE

--------------------------------------------------------------------------------

CREATE TABLE SUPPLIER(
    S_ID VARCHAR(10) PRIMARY KEY,
    S_NAME VARCHAR(20),
    PHONE INT
);

INSERT INTO SUPPLIER VALUES('S101','Howard',5557893210);
INSERT INTO SUPPLIER VALUES('S102','Tony',3345987642);
INSERT INTO SUPPLIER VALUES('S103','Jeremy',2298765890);
INSERT INTO SUPPLIER VALUES('S104','Scott',8876459023);
INSERT INTO SUPPLIER VALUES('S105','Clint',9867047893);

SELECT * FROM SUPPLIER

--------------------------------------------------------------------------------

CREATE TABLE CUSTOMER(
    C_ID VARCHAR(10) PRIMARY KEY,
    C_NAME VARCHAR(20),
    PHONE INT,
    MONTHLY VARCHAR(5)
);

INSERT INTO CUSTOMER VALUES('C101','Joey',6666667890,'Yes');
INSERT INTO CUSTOMER VALUES('C102','Ross',9876543908,'No');
INSERT INTO CUSTOMER VALUES('C103','Chandler',6753865357,'Yes');
INSERT INTO CUSTOMER VALUES('C104','Brandon',9978437802,'No');
INSERT INTO CUSTOMER VALUES('C105','Jon',98706438892,'No');
INSERT INTO CUSTOMER VALUES('C106','Robb',7689043728,'Yes');

SELECT * FROM CUSTOMER

--------------------------------------------------------------------------------

CREATE TABLE INVOICE(
    I_ID VARCHAR(10) PRIMARY KEY,
    T_DATE DATE,
    AMOUNT INT,
    E_ID VARCHAR(10),
    T_TYPE_ID VARCHAR(10)
);

CREATE OR REPLACE PROCEDURE CKINV(IID IN INVOICE.I_ID%TYPE, TD IN INVOICE.T_DATE%TYPE, AM IN INT, EID IN INVOICE.E_ID%TYPE, TT IN INVOICE.T_TYPE_ID%TYPE)
IS
TEMP INVOICE.T_TYPE_ID%TYPE;
BEGIN
    IF(TT LIKE 'S%') THEN
        SELECT S_ID INTO TEMP FROM SUPPLIER WHERE S_ID LIKE TT;
        INSERT INTO INVOICE VALUES(IID,TD,AM,EID,TT);
    END IF;
    
    IF(TT LIKE 'C%') THEN
        SELECT C_ID INTO TEMP FROM CUSTOMER WHERE C_ID LIKE TT;
        INSERT INTO INVOICE VALUES(IID,TD,AM,EID,TT);
    END IF;
    
    EXCEPTION
        WHEN no_data_found THEN dbms_output.put_line('Customer or Supplier does not exist');
END;

BEGIN
--    CKINV('I101','26-APR-2019',0,'E101','S101');
--    CKINV('I101','26-APR-2019',0,'E101','S201');
--    CKINV('I102','20-JUL-2019',0,'E101','S101');
--    CKINV('I103','15-AUG-2018',0,'E101','S102');
--    CKINV('I104','5-OCT-2017',0,'E102','S103');
--    CKINV('I105','16-JAN-2019',0,'E103','C101');
--    CKINV('I106','29-MAR-2018',0,'E101','C102');
END;

SELECT * FROM INVOICE;

--------------------------------------------------------------------------------

CREATE TABLE TRANSCTION(
    CO_ID VARCHAR(10),
    M_ID VARCHAR(10),
    I_ID VARCHAR(10),
    QUANTITY INT,
    PACK_DATE DATE,
    PRIMARY KEY (CO_ID,M_ID,I_ID),
    FOREIGN KEY (CO_ID) REFERENCES COMPANY(CO_ID),
    FOREIGN KEY (M_ID) REFERENCES MEDICINE(M_ID),
    FOREIGN KEY (I_ID) REFERENCES INVOICE(I_ID)
);

CREATE OR REPLACE FUNCTION SUMT(COID IN STOCK.CO_ID%TYPE, MID IN STOCK.M_ID%TYPE, PD IN STOCK.PACK_DATE%TYPE)
RETURN INT
IS
SUMR INT;
BEGIN
    SELECT AVAILABLE INTO SUMR FROM STOCK WHERE CO_ID = COID AND M_ID = MID AND PACK_DATE = PD;
    RETURN SUMR;
    
    EXCEPTION
        WHEN no_data_found THEN RETURN 0;
END;

CREATE OR REPLACE PROCEDURE CKTSN(COID IN TRANSCTION.CO_ID%TYPE, MID IN TRANSCTION.M_ID%TYPE, IID IN TRANSCTION.I_ID%TYPE, Q IN INT, PD IN TRANSCTION.PACK_DATE%TYPE)
IS
TEMP INVOICE.T_TYPE_ID%TYPE;
AVL INT;
PR INT;
BEGIN
    SELECT T_TYPE_ID INTO TEMP FROM INVOICE WHERE I_ID = IID;
    SELECT PRICE INTO PR FROM MED_COM WHERE CO_ID = COID AND M_ID = MID;
    
    IF(TEMP LIKE 'S%') THEN 
        INSERT INTO TRANSCTION VALUES(COID,MID,IID,Q,PD);
        UPDATE INVOICE SET AMOUNT = AMOUNT + PR*Q WHERE I_ID = IID;
        
        AVL := SUMT(COID,MID,PD);
        
        IF(AVL > 0) THEN UPDATE STOCK SET AVAILABLE = AVAILABLE + Q WHERE CO_ID = COID AND M_ID = MID AND PACK_DATE = PD;
        ELSE INSERT INTO STOCK VALUES(COID,MID,PD,Q);
        END IF;
        
    ELSE
        AVL := SUMT(COID,MID,PD);
        
        IF(AVL>Q) THEN 
            UPDATE STOCK SET AVAILABLE = AVAILABLE - Q WHERE CO_ID = COID AND M_ID = MID AND PACK_DATE = PD;
            INSERT INTO TRANSCTION VALUES(COID,MID,IID,Q,PD);
            UPDATE INVOICE SET AMOUNT = AMOUNT + PR*Q WHERE I_ID = IID;
        END IF;
        
        IF(AVL=Q) THEN
            DELETE FROM STOCK WHERE CO_ID = COID AND M_ID = MID AND PACK_DATE = PD;
            INSERT INTO TRANSCTION VALUES(COID,MID,IID,Q,PD);
            UPDATE INVOICE SET AMOUNT = AMOUNT + PR*Q WHERE I_ID = IID;
        END IF;
        
        IF(AVL<Q) THEN  dbms_output.put_line('Not enough stock!');
        END IF;
        
    END IF;
    
END;

BEGIN
--    CKTSN('CO101','M101','I101',150,'15-NOV-2017');
--    CKTSN('CO101','M102','I101',300,'20-OCT-2018');
    CKTSN('CO101','M101','I105',100,'15-NOV-2017');
--    CKTSN('CO102','M104','I102',400,'5-MAY-2018');
END;

SELECT * FROM TRANSCTION

--------------------------------------------------------------------------------

CREATE TABLE STOCK(
    CO_ID VARCHAR(10),
    M_ID VARCHAR(10),
    PACK_DATE DATE,
    AVAILABLE INT,
    PRIMARY KEY (CO_ID,M_ID,PACK_DATE),
    FOREIGN KEY (CO_ID) REFERENCES COMPANY(CO_ID),
    FOREIGN KEY (M_ID) REFERENCES MEDICINE(M_ID)
);

SELECT * FROM STOCK
